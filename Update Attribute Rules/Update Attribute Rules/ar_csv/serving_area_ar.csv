NAME,DESCRIPTION,TYPE,SUBTYPE,FIELD,ISEDITABLE,TRIGGERINSERT,TRIGGERDELETE,TRIGGERUPDATE,SCRIPTEXPRESSION,ERRORNUMBER,ERRORMESSAGE,EXCLUDECLIENTEVALUATION,ISENABLED,BATCH,SEVERITY,TAGS,CATEGORY,CHECKPARAMETERS
Serving_Area UNID,Calulates the serving area UNID,CALCULATION,,UNID,True,True,False,True,"If ($feature.GlobalID != Null){
Return ""SERV:AREA::"" + Upper(right(split($feature.GlobalID,""-"")[0],4))
}
",,,False,True,False,,,2147483647,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Total Demand,Calculate the total demand points,CALCULATION,,TOTAL_DEMAND_POINTS,True,True,False,True,"var DP = FeatureSetByName($datastore,""Demand_Point"",[""Address""],true)
var intDP = intersects((DP), Geometry($feature));
var totalDP = count(intDP)
return iif(IsEmpty(totalDP), null, totalDP);",,,False,True,False,,,0,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Address List,Generate comma-separated list of service addresses within polygon,CALCULATION,,ADD_LIST,True,True,False,True,"var Demand = FeatureSetByName($datastore,'Demand_Point',[""Address""],true)

var Customers = Contains($feature, Demand)

var AddList = []
for (var address in Customers) {
    var Add = address.Address
    Addlist[Count(AddList)] = Add
}
return Concatenate(AddList,',')
//for (var i in Count(AddList)) {
//    if (i == 0) {
//        return AddList[i]
//    }
//   else {
//        return $feature.ADD_LIST + ',' + AddList[i]
//    }
//}",,,False,True,False,,,2147483647,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Associated Equipment,Capture associated equipment ID,CALCULATION,Equipment Serving Area,ASSOC_EQUIPMENT,True,True,False,True,"var Equipment = FeatureSetByName($datastore,""Equipment"",[""EQUIP_ID""],true)
var intEquipment = intersects((Equipment), Geometry($feature));
var matchedEquipment = First(intEquipment)
return iif(IsEmpty(matchedEquipment), null, matchedEquipment.EQUIP_ID);",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Associated Splice,Capture associated splice ID,CALCULATION,Splice Serving Area,ASSOC_SPLICE,True,True,False,True,"var Splices = FeatureSetByName($datastore,""Splice_Closure"",[""SPLCL_ID""],true)
var intSplice = intersects((Splices), Geometry($feature));
var matchedSplice = First(intSplice)
return iif(IsEmpty(matchedSplice), null, matchedSplice.SPLCL_ID);",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Work Order ID,,CALCULATION,,WORK_ORDER_ID,True,True,False,True,"var FDAs = Intersects(Centroid($feature),FeatureSetByName($datastore,'FDA',[""WORK_ORDER_ID""],true))
var FDA = First(FDAs)

iif(IsEmpty(FDA),null,FDA.WORK_ORDER_ID)",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
