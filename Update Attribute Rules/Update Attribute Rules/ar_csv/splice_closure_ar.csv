NAME,DESCRIPTION,TYPE,SUBTYPE,FIELD,ISEDITABLE,TRIGGERINSERT,TRIGGERDELETE,TRIGGERUPDATE,SCRIPTEXPRESSION,ERRORNUMBER,ERRORMESSAGE,EXCLUDECLIENTEVALUATION,ISENABLED,BATCH,SEVERITY,TAGS,CATEGORY,CHECKPARAMETERS
SpliceClosure UNID,Calculate Splice Closure UNID,CALCULATION,,UNID,True,True,False,True,"If (($feature.STATUS == ""Proposed"") && ($feature.SPLICE_CLOSURE_TYPE == ""Splice Closure"")){
Return ""SPLCL:PROP::"" + Upper(right(split($feature.GlobalID,""-"")[0],4))
}
else if (($feature.STATUS == ""Proposed"") && ($feature.SPLICE_CLOSURE_TYPE == ""Splice Closure w/ Splitter"")){
Return ""SPLCL:PROP::"" + Upper(right(split($feature.GlobalID,""-"")[0],4))
}
else if (($feature.GlobalID != Null) && ($feature.SPLICE_CLOSURE_TYPE == ""Splice Tray"")){
Return ""SPLCL:TRAY::"" + Upper(right(split($feature.GlobalID,""-"")[0],4))
}",,,False,True,False,,,2147483647,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Structure ID,Hand hole ID splice is placed in,CALCULATION,,STRUCTURE_UNID,True,True,False,True,"var searchDist = 10
var sql = ""STRUCTURE_TYPE = 'Hand Hole'""

var UG_Structure = Filter(FeatureSetByName($datastore, ""UG_Structure"", [""STR_ID""], true), sql)
var nearStructure = Intersects(BufferGeodetic(Geometry($feature), searchDist, ""feet""), UG_Structure)
var matchedStructure = First(nearStructure)

return iif(IsEmpty(matchedStructure), null, matchedStructure.STR_ID)",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Rotation Match,Match rotation of hand hole,CALCULATION,,ROTATION_SYM,True,True,False,True,"var searchDist = 10
var sql = ""STRUCTURE_TYPE = 'Hand Hole'""

var UG_Structure = Filter(FeatureSetByName($datastore, ""UG_Structure"", [""STR_ID"",""ROTATION_SYM""], true), sql)
var nearStructure = Intersects(BufferGeodetic(Geometry($feature), searchDist, ""feet""), UG_Structure)
var matchedStructure = First(nearStructure)

return iif(IsEmpty(matchedStructure), null, matchedStructure.ROTATION_SYM)",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Page Number,,CALCULATION,,SPLICE_PAGE,True,True,False,True,"var Frames = FeatureSetByName($datastore,'Frames_PlanView',[""PageFinal""],true)
var intFrame = Within($feature, Frames)
var Frame = First(intFrame)

iif(IsEmpty(Frame),null,Frame.PageFinal)",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Splice ID,,CALCULATION,,SPLCL_ID,True,True,False,False,"var FC = GetFeatureSet($feature)
var TempID = 1

function Sorting(a,b) { //Sort list entries in ascending order
    if (a < b)
        return -1;
    if (a > b)
        return 1;
    return 0;
}

Console(Count(FC))
var ExistID = []
for (var f in FC) {
    if (f.SPLCL_ID != null) {
        ExistID[Count(ExistID)] = Number(f.SPLCL_ID)
    }
}

var SortExisting = Distinct(Sort(ExistID,Sorting))
Console(SortExisting)
Console(Count(SortExisting))
if (!IsEmpty(ExistID)) {
    if (Includes(ExistID,Number(TempID))) {
        Console('ID ' + TempID + ' already in use')
        var Gap = 'No'
        for (var i=0; i<Count(SortExisting)-1; i++) {
            Console(i)
            if ((SortExisting[i+1]-SortExisting[i]) != 1) {
                Gap = 'Yes'
                Console('Gap found after ID ' + SortExisting[i])
                Console(SortExisting[i]+1)
                TempID = SortExisting[i]+1
                break
            }
            Console(i)
            Console(SortExisting[i])
            Console(SortExisting[i+1])
            Console('--------')
        }
        Console('Final i - ' + SortExisting[i])
        Console(Pop(SortExisting))
        if (Count(ExistID) == 1) {
            TempID = TempID + 1
        }
        else if (Gap == 'No'){
            TempID = SortExisting[i-1] + 2
        }
        Console(TempID)   
    }
}
var ID = 'SPLCL:' + iif(Number(TempID)>999,Text(TempID,'0000'),Text(TempID,'000'))
Console(ID)

return ID",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
Work Order ID,,CALCULATION,,WORK_ORDER_ID,True,True,False,True,"var FDA = First(Intersects($feature,FeatureSetByName($datastore,'FDA',[""WORK_ORDER_ID""],true)))
iif(IsEmpty(FDA),null,FDA.WORK_ORDER_ID)",,,False,True,False,,,,"{""type"":""PropertySet"",""propertySetItems"":[]}"
